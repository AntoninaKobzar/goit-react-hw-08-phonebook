{"version":3,"file":"static/js/395.e8c6419e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register.js","../node_modules/@chakra-ui/form-control/dist/chunk-6ZNYZUDD.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-IJBC3YLI.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"input\":\"RegisterForm_input__FsgBz\",\"title\":\"RegisterForm_title__EvDyW\"};","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport css from './RegisterForm.module.css';\nimport { Button } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        <Input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Username\"\n        />\n      </label>\n      <label className={css.label}>\n        <Input\n          className={css.input}\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n        />\n      </label>\n      <label className={css.label}>\n        <Input\n          className={css.input}\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n        />\n      </label>\n      <Button\n        className={css.btn}\n        colorScheme=\"blue\"\n        variant=\"solid\"\n        type=\"submit\"\n      >\n        Register\n      </Button>\n    </form>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport css from '../components/RegisterForm/RegisterForm.module.css';\nconst Register = () => {\n  return (\n    <div>\n      <h1 className={css.title}>Register</h1>\n\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: props2.id !== void 0 ? props2.id : labelId,\n      htmlFor: props2.htmlFor !== void 0 ? props2.htmlFor : id\n    }),\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-6ZNYZUDD.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n"],"names":["RegisterForm","dispatch","useDispatch","className","css","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","I","type","placeholder","colorScheme","variant","createContext","errorMessage","FormControlStylesProvider","useFormControlStyles","strict","FormControlProvider","useFormControlContext","FormControl","forwardRef","props","ref","styles","useMultiStyleConfig","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","getLabelProps","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","onBlur","useFormControlProvider","omitThemingProps","context","cx","jsx","chakra","__css","displayName","field","helperText","useFormControl","_a","_b","_c","disabled","readOnly","required","rest","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size"],"sourceRoot":""}